(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{75:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return o}));var n=a(3),i=a(7),r=(a(0),a(89)),l=a(92),c=[{id:"hfh51v",type:"wallpaper",title:"Illuminated City at Night [1920 x 1200]",postLink:"https://redd.it/hfh51v",image:"https://i.redd.it/b6x9i2n830751.jpg",thumbnail:"https://b.thumbs.redditmedia.com/mLCk8Bh0N4M8hZafHsbAmw8rM7JEEznsT2nRZSo3GsU.jpg",subreddit:"wallpaper",NSFW:!1,spoiler:!1,createdUtc:1593066557,upvotes:1899,upvoteRatio:1},{id:"h9glhi",type:"wallpaper",title:"Missing Home by Just Jaker",postLink:"https://redd.it/h9glhi",image:"https://cdnb.artstation.com/p/assets/images/images/027/020/665/large/just-jaker-galax-noise.jpg",thumbnail:"https://b.thumbs.redditmedia.com/4utBLNbsIDDLl46z494PCRkDhmAnapQq9FL7l-07aJo.jpg",subreddit:"ImaginaryFuturism",NSFW:!1,spoiler:!1,createdUtc:1592228591,upvotes:462,upvoteRatio:1}],s={id:"usage",title:"Usage"},b={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Available function:",source:"@site/docs\\usage.md",slug:"/usage",permalink:"/reddit-image-fetcher/docs/usage",version:"current",sidebar:"docs",previous:{title:"Installation",permalink:"/reddit-image-fetcher/docs/installation"}},d=[{value:"Usage",id:"usage",children:[{value:"With await",id:"with-await",children:[]},{value:"With callback",id:"with-callback",children:[]},{value:"Using options",id:"using-options",children:[]},{value:"Custom",id:"custom",children:[]}]},{value:"Result",id:"result",children:[]},{value:"Options",id:"options",children:[]}],u={rightToc:d};function o(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Available function:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"fetch()")),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("h3",{id:"with-await"},"With await"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"await redditImageFetcher.fetch({type: 'meme'}); //returns 1 meme \nawait redditImageFetcher.fetch({type: 'wallpaper'}); //returns 1 wallpaper\n")),Object(r.b)("h3",{id:"with-callback"},"With callback"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"redditImageFetcher.fetch({type: 'meme'})\n.then(result => { }); //returns 1 meme\n")),Object(r.b)("h3",{id:"using-options"},"Using options"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"await redditImageFetcher.fetch({ type: 'wallpaper', total: 50 }); //returns 50 wallpapers \n \nawait redditImageFetcher.fetch({\n    type: 'meme',\n    total: 50, \n    addSubreddit: ['memes', 'funny'], \n    removeSubreddit: ['dankmemes']\n}); //returns 50 memes by filtering\n")),Object(r.b)("h3",{id:"custom"},"Custom"),Object(r.b)("p",null,"It can be used other than fetching memes and wallpapers."),Object(r.b)("p",null,"Custom image fetch from given subreddits:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"await redditImageFetcher.fetch({\n    type: 'custom',\n    total: 50, \n    subreddit: ['cats', 'Catswhoyell', 'sleepingcats'] \n}); //returns 50 cat images\n")),Object(r.b)("h2",{id:"result"},"Result"),Object(r.b)("p",null,"The functions are asynchronous and return array."),Object(r.b)(l.a,{data:c,mdxType:"Result"}),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)("div",{className:"z-table-wrapper"},Object(r.b)("table",null,Object(r.b)("thead",null,Object(r.b)("tr",null,Object(r.b)("th",{align:"left"},"Property"),Object(r.b)("th",{align:"center"},"Type"),Object(r.b)("th",{align:"left"},"Description"),Object(r.b)("th",{align:"center"},"Default"))),Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("td",{align:"left"},"type"),Object(r.b)("td",{align:"center"},"string"),Object(r.b)("td",{align:"left"},"meme, wallpaper or custom image to fetch"),Object(r.b)("td",{align:"center"},"'meme'")),Object(r.b)("tr",null,Object(r.b)("td",{align:"left"},"total"),Object(r.b)("td",{align:"center"},"number"),Object(r.b)("td",{align:"left"},"How many images to get. Max is 50"),Object(r.b)("td",{align:"center"},"1")),Object(r.b)("tr",null,Object(r.b)("td",{align:"left"},"subreddit"),Object(r.b)("td",{align:"center"},"[string]"),Object(r.b)("td",{align:"left"},"Custom subreddit libray"),Object(r.b)("td",{align:"center"},"[ ]")),Object(r.b)("tr",null,Object(r.b)("td",{align:"left"},"addSubreddit"),Object(r.b)("td",{align:"center"},"[string]"),Object(r.b)("td",{align:"left"},"Add subreddits to subreddit library"),Object(r.b)("td",{align:"center"},"[ ]")),Object(r.b)("tr",null,Object(r.b)("td",{align:"left"},"removeSubreddit"),Object(r.b)("td",{align:"center"},"[string]"),Object(r.b)("td",{align:"left"},"Remove subreddits from subreddit library"),Object(r.b)("td",{align:"center"},"[ ]"))))))}o.isMDXComponent=!0},92:function(e,t,a){"use strict";var n=a(0),i=a.n(n),r=(a(93),a(111)),l=a.n(r),c=a(121),s=a.n(c),b=a(95),d=a(96);t.a=function(e){var t=Object(n.useState)([]),a=t[0],r=t[1];return Object(n.useEffect)((function(){e.data?r(e.data):l.a.fetch().then((function(e){console.log(e),r(e)})).catch((function(e){alert("Error on getting example data")}))}),[]),i.a.createElement("div",{className:"card result-component-wrapper shadow-dim"},i.a.createElement("div",{className:"card__body"},i.a.createElement("div",{className:"json-viewer__body"},a.length?i.a.createElement(s.a,{getItemString:function(e,t,a,n){return i.a.createElement("span",null,e)},data:a,hideRoot:!1,invertTheme:!1,shouldExpandNode:function(){return!0},keyPath:["result"]}):i.a.createElement("span",{className:"fetching-now"},"Fetching ",i.a.createElement(b.a,{icon:d.b,spin:!0})))))}},93:function(e,t,a){}}]);